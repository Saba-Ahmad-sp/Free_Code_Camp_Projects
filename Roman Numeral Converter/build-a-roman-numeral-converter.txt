** start of undefined **

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
     <link rel="stylesheet" type="text/css" href="styles.css" />
    <title>Roman Numeral Converter</title>
  </head>
  <body>
    <div class="container">
      <h1>ROMAN NUMERAL CONVERTER</h1>
      <div class="inner-container">
        <label for="number" class="number-label">Enter a Number:</label>
        <input type="number" id="number" min="0"/>
        <button id="convert-btn">Convert</button>
      </div>
      <div class="output-container" id="output-container">
        <p id="output"></p>
      </div>
    </div>
    <script src="./script.js"></script>
  </body>
</html>


** end of undefined **

** start of undefined **

const input = document.getElementById("number");
const convertBtn = document.getElementById("convert-btn");
const output = document.getElementById("output");
const outputContainer = document.getElementById("output-container");

convertBtn.addEventListener("click", () => {
  let inputVal = input.value;
  outputContainer.style.display = "block";

  if (inputVal === "") {
    output.textContent = "Please enter a valid number";
    output.style.color = "rgb(186, 10, 10)";
  } else if (inputVal <= 0) {
    output.innerText = "Please enter a number greater than or equal to 1";
    output.style.color = "rgb(186, 10, 10)";
  } else if (inputVal >= 4000) {
    output.innerText = "Please enter a number less than or equal to 3999";
    output.style.color = "rgb(186, 10, 10)";
  } else {
    const values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];
    const symbols = [
      "M",
      "CM",
      "D",
      "CD",
      "C",
      "XC",
      "L",
      "XL",
      "X",
      "IX",
      "V",
      "IV",
      "I",
    ];

    let result = "";

    for (let i = 0; i < values.length; i++) {
      while (inputVal >= values[i]) {
        result += symbols[i];
        inputVal -= values[i];
      }
    }
    output.style.color = "black";
    output.style.marginBlock = "20px";
    return (output.innerText = result);
  }
});


** end of undefined **

** start of undefined **

*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: sans-serif;
}
body{
  background-color: #2D336B;
}
.container{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  height: 80vh;
 
}
.container>h1{
font-family: 'Courier New', Courier, monospace;
font-size: 3rem;
letter-spacing: 5px;
font-weight: bold;
color: #A9B5DF;
}
.inner-container{
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: 8px;
  margin-block: 40px;
  background-color: #7886C7;
  width: 25rem;
  height: 10rem;
  border-radius: 4px;
  border: 1px solid white;
}
.number-label{
  margin-top: 1rem;
  font-weight: 600;
}
#number{
  display: inline-block;
  width: 15rem;
  height: 3rem;
  border-radius: 5px;
  padding: 0px 20px;
  font-size: 20px;
  border: none;
}
#convert-btn{
  width: 15rem;
  height: 2rem;
  background-color: #A9B5DF;
  color: #2D336B;
  padding: 8px 20px;
  border-radius: 5px;
  letter-spacing: 1px;
  border: none;
  transition: all 0.4s;
}
#convert-btn:hover{
  cursor: pointer;
  background-color: #2D336B;
  color: #A9B5DF;
}
.output-container{
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #7886C7;
  width: 25rem;
  height: 6rem;
  border-radius: 4px;
  border: 1px solid white;
  display: none;
}
#output{
  font-weight: bold;
  font-size: 30px;
  padding: 8px 8px;
  
}

** end of undefined **

